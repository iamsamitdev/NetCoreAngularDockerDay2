# Build stage
FROM node:20.15.0-alpine AS build
WORKDIR /app

# Clean and install dependencies
COPY package*.json ./
RUN npm cache clean --force && \
    npm install

# Debug node_modules
RUN echo "=== Node Modules ===" && \
    ls -la node_modules/@angular

# Copy source and build
COPY . .
RUN npm run build -- --configuration production

# Debug build output
RUN echo "=== Build Output ===" && \
    ls -la && \
    echo "=== Dist Content ===" && \
    ls -la dist

# Production stage
FROM nginx:alpine

# Remove default nginx static assets
RUN rm -rf /usr/share/nginx/html/*

# Copy built files and config
COPY --from=build /app/dist/browser /usr/share/nginx/html/
COPY nginx.conf /etc/nginx/conf.d/default.conf

# Set permissions
RUN mkdir -p /var/cache/nginx /var/log/nginx && \
    chmod -R 755 /var/cache/nginx && \
    chmod -R 755 /var/log/nginx && \
    chmod -R 755 /usr/share/nginx/html && \
    chown -R nginx:nginx /var/cache/nginx && \
    chown -R nginx:nginx /var/log/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html && \
    chown -R nginx:nginx /etc/nginx/conf.d

EXPOSE 80

CMD ["nginx", "-g", "daemon off;"] 